def t(_, _x): return (' \r\n'
'' + _x("location", "Garrote Gorge") + '\r\n'
'\r\n'
'' + _x("location", "Chest") + '\r\n'
'\r\n'
'' + _x("location", "Well") + '\r\n'
'' + _x("location", "Drink from the well") + '\r\n'
'' + _x("location", "Fountain") + '\r\n'
'' + _x("location", "Drink from the fountain") + '\r\n'
'' + _x("location", "Refreshing") + '\r\n'
'' + _x("location", "That was not so refreshing") + '\r\n'
'\r\n'
'' + _x("location", "theunicornkin") + '\r\n'
'\r\n'
'\r\n'
'' + _x("location", "The door is locked") + '\r\n'
'\r\n'
'\r\n'
'\r\n'
'' + _x("location", "Tent") + '\r\n'
'' + _x("location", "Fruit Tree") + '\r\n'
'' + _x("location", "You receive an apple") + '\r\n'
'' + _x("location", "Berry Bush") + '\r\n'
'' + _x("location", "You receive some berries") + '\r\n'
'\r\n'
'' + _x("location", "North") + '\r\n'
'' + _x("location", "West") + '\r\n'
'' + _x("location", "East") + '\r\n'
'' + _x("location", "South") + '\r\n'
'\r\n'
'' + _x("location", "Shrine") + '\r\n'
'' + _x("location", "Altar") + '\r\n'
'' + _x("location", "You Pray") + '\r\n'
'' + _x("location", "Obelisk") + '\r\n'
'\r\n'
'\r\n'
'\r\n'
'\r\n'
'\r\n'
'\r\n'
'' + _x("location", "Tree") + '\r\n'
'' + _x("location", "Flowers") + '\r\n'
'\r\n'
'\r\n'
'\r\n'
'' + _x("location", "Dragon Hunter Camp") + '\r\n'
'' + _x("location", "Dragon Cave") + '\r\n'
'' + _x("location", "Naga Vault") + '\r\n'
'' + _x("location", "Grand Temple of Eep") + '\r\n'
'\r\n'
'' + _x("location", "Enter the Dragon Hunter's Camp") + '\r\n'
'' + _x("location", "Enter the Dragon Cave") + '\r\n'
'' + _x("location", "Enter the Naga Vault") + '\r\n'
'' + _x("location", "Enter the Grand Temple of Eep") + '\r\n'
'\r\n'
'\r\n'
'\r\n'
'\r\n'
'\r\n'
'\r\n'
'' + _x("location", "Fire Resistance +2 (Permanent)") + '\r\n'
'' + _x("location", "Accuracy +2 (Permanent)") + '\r\n'
'\r\n'
'\r\n'
'\r\n'
'\r\n'
'\r\n'
'\r\n'
'\r\n'
'\r\n'
'' + _x("location", "You have killed all of the Dragons") + '\r\n'
'' + _x("location", "You have killed all of the Dragon Hunters") + '\r\n'
'\r\n'
'\r\n'
'\r\n'
'\r\n'
'\r\n'
'\r\n'
'\r\n'
'\r\n'
'\r\n'
'\r\n'
'\r\n'
'\r\n'
'\r\n'
'\r\n'
'\r\n'
'\r\n'
'\r\n'
'\r\n'
'\r\n'
'\r\n'
'\r\n'
'\r\n'
'\r\n'
'\r\n'
'\r\n'
'\r\n'
'\r\n'
'\r\n'
'\r\n'
'\r\n'
'\r\n'
'\r\n'
'\r\n'
'\r\n'
'\r\n'
'\r\n'
'\r\n'
'\r\n'
'\r\n'
'\r\n'
'\r\n'
'\r\n'
'\r\n'
'\r\n'
'\r\n'
'\r\n'
'\r\n'
'\r\n'
'\r\n'
)